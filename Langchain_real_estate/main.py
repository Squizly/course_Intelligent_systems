
# === === === === === === === === === === === === === === === === === === === === === === === === === === === #
# В данной лабораторной работе предстоит модернизировать ЭС , реализованную в предыдущей лабораторной работе
# С использованием фреймворка Langchain. В качестве языковой модели можно использовать либо Gigachat API,
# Либо простую модель с Hugging Face (При желании и возможности можно воспользоваться и другими "источниками")
# === === === === === === === === === === === === === === === === === === === === === === === === === === === #

import os

from dotenv import load_dotenv

from langchain_gigachat import GigaChat
from langchain.prompts import ChatPromptTemplate
from langchain.text_splitter import RecursiveCharacterTextSplitter

# Подключаем переменное окружение
load_dotenv()
GIGACHAT_CREDENTIALS = os.getenv("GIGACHAT_CREDENTIALS")

# === === === === === === === === === === === === === === === === === === === === === === === === === === #
#                 Читаем правила, составленные ранее и разбиваем их на текстовые фрагменты                #
# === === === === === === === === === === === === === === === === === === === === === === === === === === #

# Считаем исходный текст из файла --->
with open('bd_text.txt', encoding='utf-8') as f:
  source_text = f.read()

print("Длина исходного текста : ",len(source_text))

# Смысловая сущность может теряться, если одна часть предложения находится в другом фрагменте
# делаем перекрытие (100 символовоd у соседних фрагментов будут общими)
# Разделим исходный текст на фрагменты длиной 300 символов и перекрытием в 100 символов --->
text_splitter = RecursiveCharacterTextSplitter(chunk_size=300, chunk_overlap=100)
split_text = text_splitter.split_text(source_text)

print("Количество фрагментов текста : ", len(split_text))

# === === === === === === === === === === === === === === === === === === === === === === === === === === #
#                                    Векторизируем полученные фрагменты                                   #
# === === === === === === === === === === === === === === === === === === === === === === === === === === #

#
#
# TO DO::
#
#

# === === === === === === === === === === === === === === === === === === === === === === === === === === #
#                                      Делаем запрос к языковой модели                                    #
# === === === === === === === === === === === === === === === === === === === === === === === === === === #

#
#
# TO DO::
#
#

llm = GigaChat(
  temperature=0.1,
  verify_ssl_certs=False
)
